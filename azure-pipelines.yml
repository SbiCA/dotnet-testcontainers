name: $(date:yyyyMMdd)$(rev:.r)

variables:
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  dotNetCoreVersion: 2.2.300

jobs:
- job: windows
  displayName: Windows Build
  pool:
    vmImage: windows-2019
  steps:
  - task: UseDotNet@2
    displayName: Use .NET Core SDK $(dotNetCoreVersion)
    inputs:
      version: $(dotNetCoreVersion)

  - powershell: ./build.ps1 --target=Restore-NuGet-Packages
    displayName: Prepare

  - powershell: ./build.ps1 --target=Build
    displayName: Build

  - powershell: ./build.ps1 --target=Test --test-filter="FullyQualifiedName~DotNet.Testcontainers.Tests.Unit.Windows"
    displayName: Test

- job: linux
  displayName: Linux Build
  dependsOn: windows
  pool:
    vmImage: ubuntu-16.04
  steps:
  - task: UseDotNet@2
    displayName: Use .NET Core SDK $(dotNetCoreVersion)
    inputs:
      version: $(dotNetCoreVersion)

  - powershell: |
      # Stop local MySQL server, port is used for tests
      sudo systemctl stop mysql.service
      # Restore NuGet packages
      ./build.sh --target=Restore-NuGet-Packages
    displayName: Prepare

  - powershell: ./build.sh --target=Sonar-Begin
    displayName: Start SonarCloud Analysis
    #condition: and(succeeded(), in(variables['Build.SourceBranch'], 'refs/heads/master', 'refs/heads/develop'))
    env:
      SONARQUBE_TOKEN: $(sonarcloud.token)

  - powershell: ./build.sh --target=Build
    displayName: Build

  - powershell: ./build.sh --target=Test
    displayName: Test

  - powershell: ./build.sh --target=Sonar-End
    displayName: Finish SonarCloud Analysis
    condition: and(succeeded(), in(variables['Build.SourceBranch'], 'refs/heads/master', 'refs/heads/develop'))
    env:
      SONARQUBE_TOKEN: $(sonarcloud.token)

  - powershell: ./build.sh --target=Publish
    displayName: Publish
    condition: and(succeeded(), in(variables['Build.SourceBranch'], 'refs/heads/master', 'refs/heads/develop'))
    env:
      NUGET_SOURCE: $(feed.source)
      NUGET_APIKEY: $(feed.apikey)
